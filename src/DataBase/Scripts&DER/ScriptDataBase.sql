DROP DATABASE IF EXISTS TECH_LAND;

CREATE DATABASE TECH_LAND;
USE TECH_LAND;

CREATE TABLE CUSTOMERS(
	CUSTOMER_ID INT NOT NULL auto_increment,
	EMAIL VARCHAR(50) NOT NULL,
	PASSWD VARCHAR(100) NOT NULL,
    FULL_NAME VARCHAR(60) NOT NULL,
    ADDRESS VARCHAR(150) NOT NULL,
    CUSTOMER_PROFILE_IMAGE VARCHAR(150) NOT NULL,
    CUSTOMER_NUMBER_PHONE VARCHAR(20),
    NATIONALITY VARCHAR(40) NOT NULL,
	PRIMARY KEY(CUSTOMER_ID)
);

CREATE TABLE PRODUCTS(
	PRODUCT_ID INT NOT NULL auto_increment,
    NAME_PRODUCT VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(100) NOT NULL,
    STOCK INT NOT NULL,
    AVAILABILITY BIT NOT NULL,
    IMAGE_PRODUCT VARCHAR(150) NOT NULL,
    PRICE INT NOT NULL,
    CREATED_AT DATE,
    UPDATE_AT DATE,
    BRAND_ID INT NOT NULL,
    PRIMARY KEY(PRODUCT_ID)
);

CREATE TABLE CATEGORIES(
	CATEGORY_ID INT NOT NULL auto_increment,
    NAME_CATEGORY VARCHAR(50) NOT NULL,
    DESCRIPTION_CATEGORY VARCHAR(150),
    PRIMARY KEY(CATEGORY_ID)
);

CREATE TABLE PRODUCT_CATEGORIES(
	CATEGORY_ID INT NOT NULL,
    PRODUCT_ID INT NOT NULL,
    PRIMARY KEY(CATEGORY_ID, PRODUCT_ID)
);

CREATE TABLE BRANDS(
	BRAND_ID INT NOT NULL auto_increment,
    NAME_BRAND VARCHAR(150) NOT NULL,
    DESCRIPTION_BRAND VARCHAR(150),
    PRIMARY KEY(BRAND_ID)
);


CREATE TABLE TYPE_COMPONENT(
	TYPE_COMPONENT_ID INT NOT NULL auto_increment,
    NAME_TYPE_COMPONENT VARCHAR(50) NOT NULL,
    DESCRIPTION_TYPE_COMPONENT VARCHAR(150),
    PRIMARY KEY(TYPE_COMPONENT_ID)
);

CREATE TABLE PRODUCT_TYPE_COMPONENT(
	TYPE_COMPONENT_ID INT NOT NULL,
    PRODUCT_ID INT NOT NULL,
    PRIMARY KEY(PRODUCT_ID, TYPE_COMPONENT_ID)
);

CREATE TABLE ORDERS(
	ORDER_ID INT NOT NULL auto_increment,
    CUSTOMER_ID INT NOT NULL,
    AMOUNT INT NOT NULL,
    SHIPPING_ADDRESS VARCHAR(150),
    ORDER_ADDRESS VARCHAR(150),
    ORDER_EMAIL VARCHAR(50),
    ORDER_DATE DATE NOT NULL,
    ORDER_STATUS VARCHAR(20) NOT NULL,
    PRIMARY KEY(ORDER_ID)
);

CREATE TABLE ORDER_DETAIL(
	ORDER_DETAIL_ID INT NOT NULL auto_increment,
    ORDER_ID INT,
    PRODUCT_ID INT NOT NULL,
    UNITY_PRICE INT NOT NULL,
    QUANTITY INT NOT NULL,
    TOTAL_PRICE INT NOT NULL,
    PRIMARY KEY(ORDER_DETAIL_ID, PRODUCT_ID)
);

CREATE TABLE ADMINS(
	ADMIN_ID INT NOT NULL auto_increment,
    ADMIN_EMAIL VARCHAR(50) NOT NULL,
    ADMIN_FULL_NAME VARCHAR(60) NOT NULL,
    ADMIN_PASSWORD VARCHAR(100) NOT NULL,
    ADMIN_PROFILE_IMAGE VARCHAR(150) NOT NULL,
    ADMIN_NUMBER_PHONE VARCHAR(20) NOT NULL,
    PRIMARY KEY(ADMIN_ID)
);

CREATE TABLE PRODUCT_ADMIN(
	PRODUCT_EDIT_ADMIN INT NOT NULL auto_increment,
    ADMIN_ID INT NOT NULL,
    PRODUCT_ID INT NOT NULL,
    DATE_ACTION DATE NOT NULL,
    ACTION_DESCRIPTION VARCHAR(50) NOT NULL,
    PRIMARY KEY(PRODUCT_EDIT_ADMIN,ADMIN_ID,PRODUCT_ID, DATE_ACTION)
);

CREATE TABLE REVIEWS(
	CUSTOMER_ID INT NOT NULL,
    PRODUCT_ID INT NOT NULL,
    REVIEW_DESCRIPTION VARCHAR(200) NOT NULL,
    SCORE INT NOT NULL,
    PRIMARY KEY(CUSTOMER_ID, PRODUCT_ID)
);


ALTER TABLE PRODUCT_CATEGORIES
	ADD FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCTS(PRODUCT_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE PRODUCT_CATEGORIES
	ADD FOREIGN KEY (CATEGORY_ID)
	REFERENCES CATEGORIES(CATEGORY_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE PRODUCTS
	ADD FOREIGN KEY (BRAND_ID)
	REFERENCES BRANDS(BRAND_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE PRODUCT_TYPE_COMPONENT
	ADD FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCTS(PRODUCT_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE PRODUCT_TYPE_COMPONENT
	ADD FOREIGN KEY (TYPE_COMPONENT_ID)
	REFERENCES TYPE_COMPONENT(TYPE_COMPONENT_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE ORDER_DETAIL
	ADD FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCTS(PRODUCT_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE ORDER_DETAIL
	ADD FOREIGN KEY (ORDER_ID)
	REFERENCES ORDERS(ORDER_ID)
	ON UPDATE CASCADE;

--
ALTER TABLE ORDERS
	ADD FOREIGN KEY (CUSTOMER_ID)
	REFERENCES CUSTOMERS(CUSTOMER_ID)
	ON UPDATE CASCADE;
--
ALTER TABLE PRODUCT_ADMIN
	ADD FOREIGN KEY (ADMIN_ID)
	REFERENCES ADMINS(ADMIN_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE PRODUCT_ADMIN
	ADD FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCTS(PRODUCT_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE REVIEWS
	ADD FOREIGN KEY (PRODUCT_ID)
	REFERENCES PRODUCTS(PRODUCT_ID)
	ON UPDATE CASCADE;
    
ALTER TABLE REVIEWS
	ADD FOREIGN KEY (CUSTOMER_ID)
	REFERENCES CUSTOMERS(CUSTOMER_ID)
	ON UPDATE CASCADE;
    
    
